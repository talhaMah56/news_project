# -*- coding: utf-8 -*-
"""preprocessing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/github/talhaMah56/news_project/blob/main/preprocessing.ipynb
"""

# Commented out IPython magic to ensure Python compatibility.
# Install dependencies as needed:
#%pip install kagglehub[pandas-datasets]
# %matplotlib inline
import kagglehub
from kagglehub import KaggleDatasetAdapter
import numpy as np
import pandas as pd
import datasets
import matplotlib.pyplot as plt
from IPython.display import display, Markdown
from datetime import datetime

# Set the path to the file you'd like to load
file_path = "articles.csv"

#Load the latest version
mit_ai_df = kagglehub.load_dataset(
  KaggleDatasetAdapter.PANDAS,
  "deepanshudalal09/mit-ai-news-published-till-2023",
  file_path
)

dataset = datasets.load_dataset("siavava/ai-tech-articles")
articles_ai_df = dataset["train"].to_pandas()

# mit_ai_df.head(5)
print(mit_ai_df)
print(mit_ai_df.isna().sum())
print("========================")
articles_ai_df.head(5)
print(articles_ai_df.isna().sum())

data = np.array(articles_ai_df)
years = data[:, 1]

# get unique years
unique_years = [ int(y) for y in np.unique(years) ]

# get counts
counts = np.array([np.sum(years == year) for year in unique_years])

plt.bar(unique_years, counts, label="Total")
plt.xticks(unique_years)

plt.legend()
plt.title("Number of articles per year")
plt.xlabel("Year")
plt.ylabel("Number of articles")
plt.show()
plt.close()

"""AI Articles Figure:
The data is very sparse until 2014, where an apparent exponential rise in the frequency occurs.
"""

data = np.array(mit_ai_df)
datetime_years = data[:, 1]


years = np.array([datetime.strptime(year, "%B %d, %Y").year for year in datetime_years])
unique_years = [ int(y) for y in np.unique(years) ]

# get counts
counts = np.array([np.sum(years == year) for year in unique_years])


plt.bar(unique_years, counts, label="Total")
plt.xticks(unique_years)

plt.legend()
plt.title("Number of articles per year")
plt.xlabel("Year")
plt.ylabel("Number of articles")
plt.show()

"""MIT_AI figure:
The data has slight upward and downward trends until 2014 when an apparent exponential rise is present.
"""